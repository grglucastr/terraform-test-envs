name: "Mainflow"

on:
  workflow_dispatch:
    inputs:
      cname:
        type: string
        required: true
        description: "Inform CNAME name"
      cvalue:
        type: string
        required: true
        description: "Inform CNAME value"

env:
  TF_CLOUD_ORGANIZATION: "bennun-labs"
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  TF_WORKSPACE: "teste-envs"
  CONFIG_DIRECTORY: "./"

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest   
    steps:
      - name: checkout
        uses: actions/checkout@v3
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform format
        id: fmt
        run: terraform fmt -check
      
      - name: Terraform init
        id: init
        run: |
          #export TF_CLOUD_ORGANIZATION=${{ env.TF_CLOUD_ORGANIZATION }}
          #export TF_WORKSPACE=${{ env.TF_WORKSPACE }} 
          terraform init

      - name: Terraform validate
        id: validate
        run: |
          #export TF_CLOUD_ORGANIZATION=${{ env.TF_CLOUD_ORGANIZATION }}
          #export TF_WORKSPACE=${{ env.TF_WORKSPACE }}
          terraform validate
      
      - name: Terraform plan
        id: plan
        run: |
          #export TF_CLOUD_ORGANIZATION=${{ env.TF_CLOUD_ORGANIZATION }}
          #export TF_WORKSPACE=${{ env.TF_WORKSPACE }}
          export TF_VAR_CNAME_NAME=${{ github.event.inputs.cname }}
          export TF_VAR_CNAME_VALUE=${{ github.event.inputs.cvalue }}
          terraform plan -input=false
        continue-on-error: true
      
      - name: Terraform apply
        run: |
          #export TF_CLOUD_ORGANIZATION=${{ env.TF_CLOUD_ORGANIZATION }}
          #export TF_WORKSPACE=${{ env.TF_WORKSPACE }}
          export TF_VAR_CNAME_NAME=${{ github.event.inputs.cname }}
          export TF_VAR_CNAME_VALUE=${{ github.event.inputs.cvalue }}
          
          terraform apply -auto-approve -input=false